import * as customerService from "../service/customer.service.js";

// T·∫°o Customer m·ªõi
export const createCustomerController = async (req, res) => {
  try {
    const { userId, loyalty_point, total_spent, membership_level, note } = req.body;

    if (!userId) {
      return res.status(400).json({ error: "Thi·∫øu userId." });
    }

    const customer = await customerService.createCustomer(userId, {
      loyalty_point,
      total_spent,
      membership_level,
      note,
    });

    res.status(201).json(customer);
  } catch (error) {
    res.status(400).json({ error: error.message });
  }
};

// L·∫•y th√¥ng tin 1 Customer theo userId
export const getCustomerController = async (req, res) => {
  try {
    const userId = req.params.userId;

    const customer = await customerService.getCustomerByUserId(userId);
    if (!customer) {
      return res.status(404).json({ message: "Kh√¥ng t√¨m th·∫•y customer." });
    }

    res.json(customer);
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
};

// C·∫≠p nh·∫≠t Customer
export const updateCustomerController = async (req, res) => {
  try {
    const userId = req.params.userId;
    const updateData = req.body;

    const updatedCustomer = await customerService.updateCustomer(userId, updateData);
    res.json(updatedCustomer);
  } catch (error) {
    res.status(400).json({ error: error.message });
  }
};

// X√≥a Customer theo userId
export const deleteCustomerController = async (req, res) => {
  try {
    const userId = req.params.userId;
    await customerService.deleteCustomer(userId);
    res.json({ message: "Customer ƒë√£ ƒë∆∞·ª£c x√≥a." });
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
};

// L·∫•y danh s√°ch t·∫•t c·∫£ Customer
export const getAllCustomersController = async (_req, res) => {
  try {
    console.log("üì• Nh·∫≠n y√™u c·∫ßu l·∫•y danh s√°ch t·∫•t c·∫£ kh√°ch h√†ng...");
    const customers = await customerService.getAllCustomers();
    console.log("‚úÖ L·∫•y danh s√°ch customer th√†nh c√¥ng. S·ªë l∆∞·ª£ng:", customers.length);
    res.json(customers);
  } catch (error) {
    console.error("‚ùå L·ªói khi l·∫•y t·∫•t c·∫£ customers:", error);
    res.status(500).json({ error: error.message || "L·ªói server khi l·∫•y danh s√°ch kh√°ch h√†ng." });
  }
};

// T√¨m ki·∫øm Customer theo t√™n
export const searchCustomersByNameController = async (req, res) => {
  try {
    const searchTerm = req.query.name;

    if (!searchTerm || searchTerm.trim() === "") {
      return res.status(400).json({ error: "Vui l√≤ng cung c·∫•p t·ª´ kh√≥a t√¨m ki·∫øm." });
    }

    const customers = await customerService.searchCustomersByName(searchTerm);
    res.json(customers);
  } catch (error) {
    res.status(500).json({ error: error.message || "L·ªói khi t√¨m ki·∫øm customer." });
  }
};
